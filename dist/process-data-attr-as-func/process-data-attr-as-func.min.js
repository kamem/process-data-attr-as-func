/*! process-data-attr-as-func|https://github.com/kamem/scroll-parallax-effect.git|0.1.0|MIT license|kamem */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports["scroll-parallax-effect"]=e():t["scroll-parallax-effect"]=e()}(self,(()=>(()=>{"use strict";var t={d:(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{ProcessDataAttrAsFunc:()=>o});const n=t=>{const e="string"==typeof t?document.querySelector(t):t;return e||((t,e)=>{throw new Error(`[process-data-attr-as-func] [${t}] ${e}`)})(n.name,` undefined element "${t}"`)};class r{#t;#e;#n;dataset={};constructor(t){this.#t=n(t.element),this.#e=t.functions||{},this.#n=t.plugin}#r(t){if(/^[+,-]?([1-9]\d*|0)(\.\d+)?$/.test(t))return parseFloat(t);if(/^(\[|\{)/g.test(t))try{return JSON.parse(t.replace(/\'/g,'"'))}catch(t){}if("true"===t||"false"===t)return"true"===t;const e=this.#e||globalThis;return"function"==typeof e[t]?e[t]:t}#o(t){const e={};for(const n in t)e[n]=this.#r(t[n]);return e}startPlugin(){return this.dataset=this.#o(this.#t.dataset),this.#n(this.#t,this.dataset)}}class o{elements;processDataAttrAsFuncPlugins;constructor(t,e,n){const o="string"==typeof t?document.querySelectorAll(t):t,s=Array.from(o);if("string"==typeof t&&0===s.length)return;this.elements=s.length>0?Array.from(o):[o];let a={plugin:()=>{}};"function"==typeof e?a.plugin=e:a=e,this.processDataAttrAsFuncPlugins=this.elements.map((t=>{const e=new r({element:t,...a,functions:n});return e.startPlugin(),e}))}}return window.ProcessDataAttrAsFunc=o,e})()));